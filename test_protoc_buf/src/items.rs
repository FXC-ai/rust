// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TypeSqlx {
    #[prost(oneof = "type_sqlx::Types", tags = "1, 2, 3, 4, 5, 6, 7, 8")]
    pub types: ::core::option::Option<type_sqlx::Types>,
}
/// Nested message and enum types in `TypeSqlx`.
pub mod type_sqlx {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Types {
        #[prost(string, tag = "1")]
        Varchar(::prost::alloc::string::String),
        #[prost(int64, tag = "2")]
        Bigint(i64),
        #[prost(double, tag = "3")]
        Numeric(f64),
        #[prost(bool, tag = "4")]
        Bool(bool),
        #[prost(int32, tag = "5")]
        Int(i32),
        #[prost(message, tag = "6")]
        Date(super::NaiveDate),
        #[prost(message, tag = "7")]
        Time(super::NaiveTime),
        #[prost(message, tag = "8")]
        Void(super::Void),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BigDecimal {
    #[prost(int64, tag = "1")]
    pub unscaled_value: i64,
    #[prost(int32, tag = "2")]
    pub scale: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NaiveDate {
    #[prost(int32, tag = "1")]
    pub year: i32,
    #[prost(int32, tag = "2")]
    pub month: i32,
    #[prost(int32, tag = "3")]
    pub day: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NaiveTime {
    #[prost(int32, tag = "1")]
    pub hour: i32,
    #[prost(int32, tag = "2")]
    pub minute: i32,
    #[prost(int32, tag = "3")]
    pub second: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Void {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RowOfDb {
    #[prost(message, repeated, tag = "1")]
    pub cols: ::prost::alloc::vec::Vec<TypeSqlx>,
    #[prost(string, repeated, tag = "2")]
    pub cols_name: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
